CREATE SCHEMA "users";

CREATE SCHEMA "lessons";

CREATE SCHEMA "feed";

CREATE TYPE "role" AS ENUM (
  'student',
  'teacher',
  'admin'
);

CREATE TYPE "speciality" AS ENUM (
  'electric_guitar',
  'acoustic_guitar',
  'vocal'
);

CREATE TYPE "users"."admin_level" AS ENUM (
  'partial',
  'full'
);

CREATE TYPE "lessons"."lesson_status" AS ENUM (
  'scheduled',
  'confirmed',
  'rescheduled',
  'canceled'
);

CREATE TABLE "users"."users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "email" varchar(50) UNIQUE,
  "password_hash" text,
  "role" role DEFAULT 'student',
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "users"."user_profile" (
  "user_id" integer PRIMARY KEY NOT NULL,
  "first_name" varchar(50),
  "last_name" varchar(50),
  "nickname" varchar(50),
  "date_of_birth" date,
  "phone_number" varchar(20),
  "bio" text,
  "profile_picture_url" text,
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "users"."students" (
  "student_id" integer PRIMARY KEY NOT NULL,
  "parent_contact" varchar(20),
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "users"."teachers" (
  "teacher_id" integer PRIMARY KEY NOT NULL,
  "speciality" speciality DEFAULT 'acoustic_guitar',
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "users"."admins" (
  "admin_id" integer PRIMARY KEY NOT NULL,
  "level" users.admin_level DEFAULT 'full',
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "lessons"."lessons" (
  "id" integer PRIMARY KEY NOT NULL,
  "teacher_id" integer NOT NULL,
  "student_id" integer NOT NULL,
  "type" speciality DEFAULT 'acoustic_guitar',
  "status" lessons.lesson_status DEFAULT 'scheduled',
  "start_time" timestamp NOT NULL,
  "end_time" timestamp NOT NULL,
  "location" text,
  "notes" text,
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "feed"."posts" (
  "id" integer PRIMARY KEY NOT NULL,
  "teacher_id" integer NOT NULL,
  "title" varchar(100) NOT NULL,
  "subtitle" varchar(200),
  "body" text,
  "created_at" timestamp DEFAULT (now),
  "updated_at" timestamp DEFAULT (now)
);

CREATE TABLE "feed"."comments" (
  "id" integer PRIMARY KEY NOT NULL,
  "post_id" integer NOT NULL,
  "author_id" integer NOT NULL,
  "body" text,
  "created_at" timestamp DEFAULT (now)
);

CREATE INDEX "start_time_index" ON "lessons"."lessons" ("start_time");

CREATE INDEX "teacher_id_index" ON "lessons"."lessons" ("teacher_id");

CREATE INDEX "student_id_index" ON "lessons"."lessons" ("student_id");

COMMENT ON TABLE "users"."users" IS 'Used for user authentication';

COMMENT ON TABLE "users"."user_profile" IS 'Used to store user details';

COMMENT ON TABLE "users"."students" IS 'Used to store student-specific data';

COMMENT ON TABLE "users"."teachers" IS 'Used to store teacher-specific data';

COMMENT ON TABLE "users"."admins" IS 'Used to store admin-related data';

COMMENT ON TABLE "lessons"."lessons" IS 'Used to store lesson schedules';

COMMENT ON TABLE "feed"."posts" IS 'Used to store posts';

COMMENT ON COLUMN "feed"."posts"."body" IS 'Content of the post';

COMMENT ON TABLE "feed"."comments" IS 'Used to store comments to related posts';

COMMENT ON COLUMN "feed"."comments"."body" IS 'Content of the comment';

ALTER TABLE "users"."user_profile" ADD FOREIGN KEY ("user_id") REFERENCES "users"."users" ("id");

ALTER TABLE "users"."students" ADD FOREIGN KEY ("student_id") REFERENCES "users"."users" ("id");

ALTER TABLE "users"."teachers" ADD FOREIGN KEY ("teacher_id") REFERENCES "users"."users" ("id");

ALTER TABLE "users"."admins" ADD FOREIGN KEY ("admin_id") REFERENCES "users"."users" ("id");

ALTER TABLE "lessons"."lessons" ADD FOREIGN KEY ("teacher_id") REFERENCES "users"."teachers" ("teacher_id");

ALTER TABLE "users"."students" ADD FOREIGN KEY ("student_id") REFERENCES "lessons"."lessons" ("student_id");

ALTER TABLE "feed"."posts" ADD FOREIGN KEY ("teacher_id") REFERENCES "users"."teachers" ("teacher_id");

ALTER TABLE "feed"."comments" ADD FOREIGN KEY ("post_id") REFERENCES "feed"."posts" ("id");

ALTER TABLE "feed"."comments" ADD FOREIGN KEY ("author_id") REFERENCES "users"."users" ("id");
